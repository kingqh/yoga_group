-- 拼团活动表
CREATE TABLE `group_activity` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `price` DECIMAL(10,2) NOT NULL,
  `original_price` DECIMAL(10,2) NOT NULL,
  `group_size` INT NOT NULL,
  `duration` INT COMMENT '小时数',
  `start_time` DATETIME,
  `end_time` DATETIME,
  `stock` INT DEFAULT 0
);

-- 用户拼团表
CREATE TABLE `user_group` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `activity_id` INT NOT NULL,
  `creator_openid` VARCHAR(50) NOT NULL,
  `members` JSON NOT NULL COMMENT '存储openid数组',
  `status` TINYINT DEFAULT 0 COMMENT '0-进行中 1-成功 2-失败',
  `expire_time` DATETIME
  `created_at` DATETIME
);

-- 订单表
CREATE TABLE `orders` (
  `order_id` VARCHAR(50) PRIMARY KEY,
  `openid` VARCHAR(50) NOT NULL,
  `group_id` INT,
  `amount` DECIMAL(10,2) NOT NULL,
  `status` TINYINT DEFAULT 0 COMMENT '0-未支付 1-已支付'
  `created_at` DATETIME
);

-- 用户表
CREATE TABLE `users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `openid` VARCHAR(128) NOT NULL COMMENT '微信openid',
  `unionid` VARCHAR(128) DEFAULT NULL COMMENT '微信unionid',
  `nickname` VARCHAR(64) NOT NULL DEFAULT '' COMMENT '用户昵称',
  `avatar` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '用户头像URL',
  `phone` VARCHAR(20) DEFAULT NULL COMMENT '手机号',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '注册时间',
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `login_number` INT,
  PRIMARY KEY (`user_id`)
) COMMENT='用户信息表';


-- 为常用查询字段添加索引
ALTER TABLE user_group ADD INDEX idx_expire_status (expire_time, status);
ALTER TABLE orders ADD INDEX idx_order_status (order_id, status);
ALTER TABLE group_activity ADD INDEX idx_time_status (start_time, end_time);

-- 给 group_activity 增加 3 个字段

ALTER TABLE group_activity
ADD COLUMN viewed_num INT NOT NULL DEFAULT 0 COMMENT '浏览数量',
ADD COLUMN shared_num INT NOT NULL DEFAULT 0 COMMENT '分享数量',
ADD COLUMN registered_num INT NOT NULL DEFAULT 0 COMMENT '注册数量';



1. 加入一条活动数据

INSERT INTO `group_activity` (
  `title`,
  `price`,
  `original_price`,
  `group_size`,
  `duration`,
  `start_time`,
  `end_time`,
  `stock`
) VALUES (
  '瑜伽新手体验课',
  99.00,
  199.00,
  3,
  24,
  '2023-10-01 00:00:00',
  '2023-10-31 23:59:59',
  100
);

--- 上线的活动
INSERT INTO `group_activity` (
  `id`,
  `title`,
  `price`,
  `original_price`,
  `group_size`,
  `duration`,
  `start_time`,
  `end_time`,
  `stock`
) VALUES (
  666,
  '瑜伽',
  199.00,
  299.00,
  3,
  24,
  '2025-03-21 00:00:00',
  '2025-03-22 23:59:59',
  200
);

2.

INSERT INTO user_group SET 
          activity_id = '10',
          creator_openid = '20',
          members = JSON_ARRAY('20'),
          expire_time = '2025-03-21 18:45:00',
          status = 0,
          created_at = '2025-03-21 18:45:00'

UPDATE group_activity SET end_time = '2025-03-25 18:45:00' WHERE id = 1;

## 删除一条数据

DELETE FROM table_name; 删除所有行，并且有记录

DELETE FROM user_group; 

DELETE FROM orders; 


UPDATE user_group 
          SET 
            members = JSON_ARRAY_APPEND(
              members,
              '$',
              'aaa')
          WHERE id = 14
            AND status = 0
            AND JSON_SEARCH(members, 'one', 'aaa') IS NULL


UPDATE user_group \n         
 SET \n            
 members = JSON_ARRAY_APPEND(\n              members,\n              \'$\',\n              CAST(\'\\"aaa\\"\' AS JSON)\n          WHERE id = 14\n            AND status = 0\n            AND expire_time > NOW()\n           
  AND JSON_SEARCH(members, \'one\', \'aaa\') IS NULL\n     



SELECT 
  ug.*,
  ga.title,
  ga.price,
  ga.group_size
FROM user_group ug
JOIN group_activity ga ON ug.activity_id = ga.id
WHERE ug.id = 14;



SELECT 
    ug.*,
    ga.title,
    ga.price,
    ga.group_size
FROM user_group ug
JOIN group_activity ga ON ug.activity_id = ga.id
WHERE ug.id = 14;